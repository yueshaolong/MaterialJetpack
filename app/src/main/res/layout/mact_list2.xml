<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <data>
        <variable
            name="toolBarViewModel"
            type="com.ysl.materialjetpack.shizhan.viewmodel.ToolBarViewModel" />
        <variable
            name="articleViewModel"
            type="com.ysl.materialjetpack.shizhan.viewmodel.ArticleViewModel" />
    </data>

    <androidx.coordinatorlayout.widget.CoordinatorLayout
        android:fitsSystemWindows="true"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <com.google.android.material.appbar.AppBarLayout
            android:id="@+id/appbar"
            android:fitsSystemWindows="true"
            android:layout_width="match_parent"
            android:layout_height="wrap_content">
<!--                app:toolbarId="@id/toolbar"-->

            <!--AppBarLayout的子布局有5种滚动标识(就是下面代码CollapsingToolbarLayout中配置的
            app:layout_scrollFlags属性)：

            scroll:
            将此布局和滚动时间关联。这个标识要设置在其他标识之前，没有这个标识则布局不会滚动且其他标识设置无效。

            enterAlways:
            任何向下滚动操作都会使此布局可见。这个标识通常被称为“快速返回”模式。

            enterAlwaysCollapsed：
            假设你定义了一个最小高度（minHeight）同时enterAlways也定义了，那么view将在到达这个最小高度的时候开始显示，
            并且从这个时候开始慢慢展开，当滚动到顶部的时候展开完。

            exitUntilCollapsed：
            当你定义了一个minHeight，此布局将在滚动到达这个最小高度的时候折叠。

            snap:
            当一个滚动事件结束，如果视图是部分可见的，那么它将被滚动到收缩或展开。例如，如果视图只有底部25%显示，
            它将折叠。相反，如果它的底部75%可见，那么它将完全展开。

            CollapsingToolbarLayout可以通过
            app:contentScrim设置折叠时工具栏布局的颜色，默认contentScrim是colorPrimary的色值。
            app:statusBarScrim设置折叠时状态栏的颜色。默认statusBarScrim是colorPrimaryDark的色值。

            CollapsingToolbarLayout的子布局有3种折叠模式（Toolbar中设置的app:layout_collapseMode）

            off：
            这个是默认属性，布局将正常显示，没有折叠的行为。

            pin：
            CollapsingToolbarLayout折叠后，此布局将固定在顶部。

            parallax：
            CollapsingToolbarLayout折叠时，此布局也会有视差折叠效果。

            当CollapsingToolbarLayout的子布局设置了parallax模式时，我们还可以通过
            app:layout_collapseParallaxMultiplier设置视差滚动因子，值为：0~1，默认0.5。-->
            <com.google.android.material.appbar.CollapsingToolbarLayout
                android:id="@+id/ctl_toolbar"
                app:layout_scrollFlags="scroll|exitUntilCollapsed"
                app:titleEnabled="true"
                app:toolbarId="@id/toolbar"
                app:title="@{String.valueOf(articleViewModel.article.total),default=标题}"
                app:collapsedTitleTextAppearance="@style/ToolbarSubtitle"
                app:expandedTitleTextAppearance="@style/ToolbarTitle"
                app:collapsedTitleGravity="center_horizontal"
                app:expandedTitleGravity="left|bottom"
                app:contentScrim="@color/red"
                app:statusBarScrim="@android:color/transparent"
                android:fitsSystemWindows="true"
                android:layout_width="match_parent"
                android:layout_height="250dp">

                <ImageView
                    app:layout_collapseMode="parallax"
                    android:fitsSystemWindows="true"
                    android:src="@mipmap/error"
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:scaleType="centerCrop"/>

                <com.google.android.material.appbar.MaterialToolbar
                    android:id="@+id/toolbar"
                    app:layout_collapseMode="pin"
                    app:contentInsetStart="0dp"
                    app:contentInsetEnd="0dp"
                    app:popupTheme="@style/ToolbarPopupTheme"
                    app:navigationContentDescription="返回"
                    app:navigationIcon="@mipmap/action_button_back_normal"
                    app:menu="@menu/main"
                    android:layout_width="match_parent"
                    android:layout_height="?attr/actionBarSize">
<!--                    app:contentInsetEndWithActions="0dp"-->
<!--                    app:contentInsetStartWithNavigation="0dp"-->
<!--                    app:title="@{String.valueOf(articleViewModel.article.curPage)+'页',default=标题}"-->
<!--                    app:titleTextAppearance="@style/ToolbarTitle"-->
<!--                    app:subtitle="@{String.valueOf(articleViewModel.article.size),default=副标题}"-->
<!--                    app:subtitleTextAppearance="@style/ToolbarSubtitle"-->
                </com.google.android.material.appbar.MaterialToolbar>

            </com.google.android.material.appbar.CollapsingToolbarLayout>
            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="40dp"
                android:background="#16DA1E"
                android:orientation="horizontal">

                <TextView
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_marginLeft="20dp"
                    android:layout_weight="1"
                    android:text="¥ 99.8"
                    android:textColor="#f00" />

                <Button
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:background="#eda62c"
                    android:text="立即预定"
                    android:textColor="#fff" />
            </LinearLayout>
        </com.google.android.material.appbar.AppBarLayout>

        <com.scwang.smartrefresh.layout.SmartRefreshLayout
            app:layout_behavior="@string/appbar_scrolling_view_behavior"
            android:id="@+id/srl"
            android:layout_width="match_parent"
            android:layout_height="match_parent">
            <androidx.recyclerview.widget.RecyclerView
                android:id="@+id/rv"
                app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
                android:layout_width="match_parent"
                android:layout_height="match_parent" />
        </com.scwang.smartrefresh.layout.SmartRefreshLayout>
    </androidx.coordinatorlayout.widget.CoordinatorLayout>

</layout>