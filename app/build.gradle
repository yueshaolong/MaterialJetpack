apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

apply plugin: "androidx.navigation.safeargs"
//apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.ysl.materialjetpack"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        buildFeatures{
            viewBinding = true
            dataBinding = true
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }

        ndk {
            // 设置支持的 SO 库构架，注意这里要根据你的实际情况来设置
            abiFilters 'armeabi-v7a'//,'armeabi','x86'
        }
        //必须要保证所有的flavor 都属于同一个维度
        flavorDimensions "default"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        //开发环境
        develop {
            applicationId 'com.ysl.materialjetpack'
            buildConfigField "int", "ENV_TYPE", "1"
//            resValue "string", "app_name", "开发-双重预防体系"
            manifestPlaceholders = [
                    //极光推送的相关信息配置，便于清单文件中的引用
                    JSHARE_PKGNAME : "com.ysl.materialjetpack",
                    JPUSH_APPKEY : "f0ad502e7da679a00ba6af96", //JPush 上注册的包名对应的 Appkey.
                    JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
                    TENCENT_APPID : "1111493049",
                    WECHAT_APPID : "",//微信平台appid
                    app_icon: "@mipmap/logo"
            ]
        }
    }
    //全局配置文件
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}
//plugins {
//    id 'kotlin-parcelize'
//}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "com.google.android.material:material:1.2.0"

//    def lifecycle_version = "2.3.0-alpha07"
    def lifecycle_version = "2.2.0"
    def arch_version = "2.1.0"
    // Kotlin
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // Java language implementation
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    // Annotation processor
//    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"
    // optional - Test helpers for LiveData
//    testImplementation "androidx.arch.core:core-testing:$arch_version"

    def nav_version = "2.3.3"
    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
    // Dynamic Feature Module Support
//    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    // Testing Navigation
//    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    // Jetpack Compose Integration
//    implementation "androidx.navigation:navigation-compose:1.0.0-alpha06"

    def paging_version = "3.0.0-alpha11"
//    def paging_version = "2.1.2"
    // Kotlin
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
//    implementation "androidx.paging:paging-rxjava2-ktx:$paging_version"
//    testImplementation "androidx.paging:paging-common-ktx:$paging_version"
    // Java language implementation
    implementation "androidx.paging:paging-runtime:$paging_version"
    // optional - RxJava2 support
//    implementation "androidx.paging:paging-rxjava2:$paging_version"
    // optional - RxJava3 support
//    implementation "androidx.paging:paging-rxjava3:$paging_version"
    // optional - Guava ListenableFuture support
//    implementation "androidx.paging:paging-guava:$paging_version"
    // alternatively - without Android dependencies for testing
//    testImplementation "androidx.paging:paging-common:$paging_version"

//    def work_version = "2.5.0-beta02"
    def work_version = "2.4.0"
    // Kotlin
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // Java language implementation
    implementation "androidx.work:work-runtime:$work_version"
    // optional - RxJava2 support
//    implementation "androidx.work:work-rxjava2:$work_version"
    // optional - GCMNetworkManager support
    implementation "androidx.work:work-gcm:$work_version"
    // optional - Test helpers
//    androidTestImplementation "androidx.work:work-testing:$work_version"

//    def room_version = "2.3.0-alpha04"
    def room_version = "2.2.6"
    // Kotlin
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // Java language implementation
    implementation "androidx.room:room-runtime:$room_version"
//    annotationProcessor "androidx.room:room-compiler:$room_version"
    // optional - RxJava support for Room
//    implementation "androidx.room:room-rxjava2:$room_version"
    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"
    // Test helpers
//    testImplementation "androidx.room:room-testing:$room_version"

    def hilt_version = "2.28.3-alpha"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    def hilt_compiler_version = "1.0.0-alpha02"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_compiler_version"
    implementation "androidx.hilt:hilt-work:$hilt_compiler_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_compiler_version"
//    annotationProcessor "androidx.hilt:hilt-compiler:$hilt_compiler_version"

    implementation 'androidx.fragment:fragment-ktx:1.2.5'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    implementation 'com.blankj:utilcode:1.25.0'
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    implementation 'com.github.lygttpod:SuperTextView:2.4.2'
    implementation 'com.github.bboylin:UniversalToast:v1.0.5'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'
    implementation project(':loadsirlibrary')
//    implementation project(':sharelibrary')

    implementation 'cn.jiguang.sdk:jcore:2.1.2'
    implementation 'cn.jiguang.sdk:jshare:1.8.0'
    implementation 'cn.jiguang.sdk:jshare-wechatmodel:1.8.0'
    implementation 'cn.jiguang.sdk:jshare-qqmodel:1.8.0'
    implementation 'cn.jiguang.sdk:jshare-sinamodel:1.8.0'
}